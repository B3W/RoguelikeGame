09/04/2018
	Program is completed up to corridor drawing

09/05/2018 11:02 AM
	Fixed accidental forward slash on line 68
	Extended dungeon array to fit the status bar
	Changed init_dungeon function to init_dungeon_arr
	Changed room placing logic to only account for dungeon height

09/05/2018 12:20 AM
	Created render_corridors function for carving corridors between rooms
	Re-added -Werror flag to Makefile after finishing testing that required warnings to be allowed
	Updated README with character meanings and and updated implementation section

09/09/2018 9:51 PM
	Refactored by placing code in 'main' into a new function called 'init_dungeon'
	'init_dungeon' was created to abstract dungeon creation into a single call; this will be helpful in the future
	Added 'init_dungeon' to the header file
	Removed 'hardness' field from room struct as creating a single 2D array keeping track of hardness for each square in the dungeon makes more sense
	Added details to the @param annotations on some of  the functions where it was missing
	Changed enclosing brackets on functions to start on the line below the function declaration as I think it looks cleaner

09/10/2018 12:01 AM
	Added hardness functionality for rock in the dungeon

09/11/2018 9:00 PM
	Added ability to load and save dungeons via command line switches
	Added parameters to the init_dungeon function to accomadate load and save
	Added load_dungeon and save_dungeon functions

09/12/2018 6:15 PM
	Added generate_dungeon function
	Added check to see if 'dungeon' file exists. If not a new one is generated

09/16/2018 8:23 PM
	Added typedef to structs and changed declarations in code
	Removed init_rooms function in favor of one line initialization

09/16/2018 10:45 PM
	Removed render_room function and placed logic in init_rooms function
	Fixed inefficient validation of new rooms within init_rooms function
	Changed num_rooms variable from char to uint8_t

09/18/2018 3:45 PM
	Major refactoring of data types: Moved declarations to header, added dungeon data type
	Edited functions to accept single parameter of type dungeon instead of multiple parameters for all fields in a dungeon
	Edited load and save functions: Writing player data in two steps, added helper functions for reading and writing hardness matrix and room data
	Added static annotation to functions not being used outside of Dungeon_Generation.c file and removed their prototypes from header file

09/18/2018 4:00 PM
	Removed main from Dungeon_Generation.c and moved it into seperate file main.c
	Updated makefile to work with main.c

